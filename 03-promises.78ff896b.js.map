{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACvC,IAAIC,EAAa,EAgBjBH,EAAQI,iBAAiB,UACzB,SAAsBC,GACpBA,EAAEC,iBACF,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cACAC,EAAcC,OAAOL,EAAMM,OAC3BC,EAAaF,OAAOJ,EAAKK,OACzBE,EAAeH,OAAOH,EAAOI,OAEnCG,YAAW,QAAUL,GAErB,IAAIM,EAAaC,aAAY,KAC3B,GAAIhB,IAAea,EAEjB,YADAI,cAAcF,IA7BpB,SAAuBG,EAAUb,GAC/B,MAAMc,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,CAACC,EAASC,KAC3BV,YAAW,KACLK,EACFI,EAAQ,uBAAqBL,QAAiBb,OAE5CmB,EAAK,sBAAoBN,QAAeb,MAAU,GAErDA,EAAM,IAERoB,MAAKC,GAAK/B,EAAAgC,OAAOC,QAAQF,KACzBG,OAAMC,GAAKnC,EAAAgC,OAAOI,QAAQD,I,CAsB3BE,CAFe,EAAIhC,EACTS,EAAcG,EAAaZ,GAErCA,GAAc,CAAC,GACdY,GACHV,EAAEM,cAAcyB,QAChBjC,EAAa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nlet MAX_COUNTS = 0;\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  })\n    .then(x => Notify.success(x))\n    .catch(y => Notify.failure(y));\n}\n\nformRef.addEventListener('submit', onFormSubmit);\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  const delayNumber = Number(delay.value);\n  const stepNumber = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  setTimeout(() => {}, delayNumber);\n\n  let intervalId = setInterval(() => {\n    if (MAX_COUNTS === amountNumber) {\n      clearInterval(intervalId);\n      return;\n    }\n    let position = 1 + MAX_COUNTS;\n    let del = delayNumber + stepNumber * MAX_COUNTS;\n    createPromise(position, del);\n    MAX_COUNTS += 1;\n  }, stepNumber);\n  e.currentTarget.reset();\n  MAX_COUNTS = 0;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$MAX_COUNTS","addEventListener","e","preventDefault","elements","delay","step","amount","currentTarget","delayNumber","Number","value","stepNumber","amountNumber","setTimeout","intervalId","setInterval","clearInterval","position","shouldResolve","Math","random","Promise","resolve","reject","then","x","Notify","success","catch","y","failure","$47d4ff9957288465$var$createPromise","reset"],"version":3,"file":"03-promises.78ff896b.js.map"}